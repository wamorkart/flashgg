* Instructions for H4G MicroAOD production
** Setup
   Before you start, **please take note** of these warnings and comments:
   - **N.B.** The setup script will check out many packages and take a while!
   - **N.B.** You can ignore "error: addinfo_cache" lines.
   - **N.B.** These setup instructions now include the STXS workflow

   Supported releases:
   - 10_6_1_patch2 required for the STXS stage 1.1 information
   - 10_6_8 required for the STXS stage 1.2 information

   get flashgg:
   #+BEGIN_EXAMPLE
   export SCRAM_ARCH=slc7_amd64_gcc700
   cmsrel CMSSW_10_6_8
   cd CMSSW_10_6_8/src
   cmsenv
   git cms-init
   cd $CMSSW_BASE/src
   git clone -b h4g_microAOD_prod  git@github.com:wamorkart/flashgg.git
   source flashgg/setup_flashgg.sh
   #+END_EXAMPLE

   If everything now looks reasonable, you can build:
   #+BEGIN_EXAMPLE
   cd $CMSSW_BASE/src
   scram b -j 4
   #+END_EXAMPLE

** Things to do
    The MiniAOD DAS links are:
    #+BEGIN_EXAMPLE
    2016: https://cmsweb.cern.ch/das/request?view=list&limit=50&instance=prod%2Fglobal&input=dataset%3D%2FHAHMHToAA_AToGG_MA-*GeV_TuneCUETP8M1_PSweights_13TeV-madgraph_pythia8%2F*%2FMINIAODSIM
    2017: https://cmsweb.cern.ch/das/request?view=list&limit=50&instance=prod%2Fglobal&input=dataset%3D%2FHAHMHToAA_AToGG_MA-*GeV_TuneCP5_PSweights_13TeV-madgraph_pythia8%2F*RunIIFall17*%2FMINIAODSIM
    2018: https://cmsweb.cern.ch/das/request?view=list&limit=50&instance=prod%2Fglobal&input=dataset%3D%2FHAHMHToAA_AToGG_MA-*GeV_TuneCP5_PSweights_13TeV-madgraph_pythia8%2F*RunIIAutumn18*%2FMINIAODSIM
    #+END_EXAMPLE

    Prepare the json file for microAOD submission: For now, the samples are processed under 'bkg'. At some point we need to investigate the signal customization which will allow us to add PDF weights.
    #+BEGIN_EXAMPLE
    2016: MetaData/work/H4G_2016_signal.json
    2017: MetaData/work/H4G_2017_signal.json
    2018: MetaData/work/H4G_2018_signal.json
    #+END_EXAMPLE

    Add the list of samples to be processed under MetaData/data/cross_sections.json

    You should copy the xml weight files that are required for microAOD production to an area before CRAB job submission. This is to ensure that the tar ball of the CRAB job is not big (the jobs crash if it is larger than 200 MB).
    #+BEGIN_EXAMPLE
    cd $CMSSW_BASE/src/flashgg
    mkdir ../../external/slc7_amd64_gcc700/data/
    #+END_EXAMPLE

    I found that copying just the following weights file was enough to successfully run the microAOD production:
    #+BEGIN_EXAMPLE
    cp MicroAOD/data/HggPhoId_94X_barrel_BDT_v2.weights.xml ../../external/slc7_amd64_gcc700/data/
    cp MicroAOD/data/HggPhoId_94X_endcap_BDT_v2.weights.xml ../../external/slc7_amd64_gcc700/data/
    cp MicroAOD/data/TMVAClassification_BDTVtxId_SL_2016.xml ../../external/slc7_amd64_gcc700/data/
    cp MicroAOD/data/TMVAClassification_BDTVtxProb_SL_2016.xml ../../external/slc7_amd64_gcc700/data/
    #+END_EXAMPLE

    Also, make the following changes in the metaconditions json files (MetaData/data/MetaConditions/Era2016_RR-17Jul2018_v1.json, MetaData/data/MetaConditions/Era2017_RR-31Mar2018_v1.json  and MetaData/data/MetaConditions/Era2018_RR-17Sep2018_v1.json):
    #+BEGIN_EXAMPLE
    "photonIdMVAweightfile_EB" : "flashgg/MicroAOD/data/HggPhoId_94X_barrel_BDT_v2.weights.xml", -> "photonIdMVAweightfile_EB" : "HggPhoId_94X_barrel_BDT_v2.weights.xml",
    "photonIdMVAweightfile_EE" : "flashgg/MicroAOD/data/HggPhoId_94X_endcap_BDT_v2.weights.xml", -> "photonIdMVAweightfile_EE" : "HggPhoId_94X_endcap_BDT_v2.weights.xml",
    "vertexIdMVAweightfile" : "flashgg/MicroAOD/data/TMVAClassification_BDTVtxId_SL_2016.xml", -> "vertexIdMVAweightfile" : "TMVAClassification_BDTVtxId_SL_2016.xml",
    "vertexProbMVAweightfile" : "flashgg/MicroAOD/data/TMVAClassification_BDTVtxProb_SL_2016.xml" -> "vertexProbMVAweightfile" : "TMVAClassification_BDTVtxProb_SL_2016.xml"
    #+END_EXAMPLE

    To submit CRAB jobs, make sure you are in the correct directory:
    #+BEGIN_EXAMPLE
    cd $CMSSW_BASE/src/flashgg/MetaData/work
    #+END_EXAMPLE

    Next, set up the environment:
    #+BEGIN_EXAMPLE
    cmsenv
    voms-proxy-init --voms cms --valid 168:00
    source /cvmfs/cms.cern.ch/crab3/crab.sh
    #+END_EXAMPLE

    The H4G MicroAOD's land here --/eos/cms/store/group/phys_higgs/HiggsExo/H4Gamma/ so make sure you can write to this area
    Follow the commands to submit the CRAB jobs:
    #+BEGIN_EXAMPLE
    Its important for the value of the -V argument to contain the proper naming. This is used in the later stages of running the H4G Tagger in picking up the correct PU distribution.
    2016:./prepareCrabJobs.py -p ${CMSSW_BASE}/src/flashgg/MicroAOD/test/microAODstd.py -C H4G_2016_Signal_Sep2020 -U 1 -L 25 -s H4G_2016_signal.json  -V PUMoriond17 -o /store/group/phys_higgs/HiggsExo/H4Gamma/H4G_Signal_Sep2020/2016 --meta-conditions ${CMSSW_BASE}/src/flashgg/MetaData/data/MetaConditions/Era2016_RR-17Jul2018_v1.json

    2017:./prepareCrabJobs.py -p ${CMSSW_BASE}/src/flashgg/MicroAOD/test/microAODstd.py -C H4G_2017_Signal_Sep2020 -U 1 -L 25 -s H4G_2017_signal.json  -V 94X_mc2017 -o /store/group/phys_higgs/HiggsExo/H4Gamma/H4G_Signal_Sep2020/2017 --meta-conditions ${CMSSW_BASE}/src/flashgg/MetaData/data/MetaConditions//Era2017_RR-31Mar2018_v1.json

    2018:./prepareCrabJobs.py -p ${CMSSW_BASE}/src/flashgg/MicroAOD/test/microAODstd.py -C H4G_2018_Signal_Sep2020 -U 1 -L 25 -s H4G_2018_signal.json  -V 102X_mc-RunIIAutumn18 -o /store/group/phys_higgs/HiggsExo/H4Gamma/H4G_Signal_Sep2020/2018 --meta-conditions ${CMSSW_BASE}/src/flashgg/MetaData/data/MetaConditions/Era2018_RR-17Sep2018_v1.json

    #+END_EXAMPLE

    You should then
    #+BEGIN_EXAMPLE
    cd <campaignName> for eg: cd H4G_2016_Signal_Sep2020
    echo crab_* | xargs -n 1 crab sub
    You can check on the jobs using:
    echo crab_* | xargs -n 1 crab status
    #+END_EXAMPLE
